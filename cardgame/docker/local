# WE are pulling this docker
FROM python:3.7-alpine

# who's maintaining the project
MAINTAINER Anjali Chaudhary

# python unbuffered env variable
ENV PYTHONUNBUFFERED 1

#  uses the package manager (apk) that comes with Alpine,
# --update = update the registry begore we add it.
# --no-cache Don't store the registry index on our docker file
RUN apk add --update --no-cache postgresql-client

# --virtual sets up an alias for our dependencies that we can
#   use to eaily remove all those dependencies later.
RUN apk add --update --no-cache --virtual .temp-build-deps \
      gcc libc-dev linux-headers postgresql-dev

# Create a directory within our docker image that
# we can use to store our application

# create an empty directory in our docker image
# We will create our application in this directory
RUN mkdir /cardgame
# make this as the default directory ( by switching to it )
# anything that we run in this docker will run this directory
WORKDIR /cardgame
# to copy our app to docker to the folder app
COPY ./cardgame /cardgame

# install all the requirements to our docker container
RUN pip install --upgrade pip
RUN pip install -r /cardgame/requirements.txt
RUN apk del .temp-build-deps
# CREATE USER --- with this, we run our application in docker.
# It is sort of recommended otherwise, application will run with
# root previliges which is not recommended.

# -D : create 'user' which can be used only for running application
# It won't have any home directory and all that stuff
RUN adduser -D user
# switch docker to the user that have created
USER user